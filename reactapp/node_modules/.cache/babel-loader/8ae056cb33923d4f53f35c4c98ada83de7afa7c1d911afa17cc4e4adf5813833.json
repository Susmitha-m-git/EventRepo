{"ast":null,"code":"import _objectSpread from\"C:/Users/roopa/Downloads/7c472156-04dc-4f9d-a70b-583e9ec537ed-89d5830e-67ff-4cea-a4e7-1923775caa72/reactapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";const API_BASE_URL='http://localhost:8081/api';const createHeaders=()=>{const token=localStorage.getItem('token');return _objectSpread({'Content-Type':'application/json'},token&&{'Authorization':\"Bearer \".concat(token)});};export const getEvents=async()=>{try{const response=await fetch(\"\".concat(API_BASE_URL,\"/events\"),{headers:createHeaders()});if(!response.ok){const errorData=await response.text();throw new Error(\"Failed to fetch events: \".concat(response.status,\" \").concat(errorData));}const data=await response.json();return{data};}catch(error){console.error('Error fetching events:',error);throw new Error(\"Network error: \".concat(error.message));}};export const createEvent=async event=>{if(!event||!event.title){throw new Error('Invalid event data');}try{const response=await fetch(\"\".concat(API_BASE_URL,\"/events\"),{method:'POST',headers:createHeaders(),body:JSON.stringify(event)});if(!response.ok){const errorData=await response.text();throw new Error(\"Failed to create event: \".concat(response.status,\" \").concat(errorData));}return await response.json();}catch(error){console.error('Error creating event:',error);throw new Error(\"Network error: \".concat(error.message));}};export const rsvpToEvent=async(eventId,attendeeName)=>{if(!eventId||!(attendeeName!==null&&attendeeName!==void 0&&attendeeName.trim())){throw new Error('Invalid RSVP data');}try{const response=await fetch(\"\".concat(API_BASE_URL,\"/events/\").concat(eventId,\"/rsvp?attendee=\").concat(encodeURIComponent(attendeeName.trim())),{method:'POST',headers:createHeaders()});if(!response.ok){const errorData=await response.text();throw new Error(\"Failed to RSVP: \".concat(response.status,\" \").concat(errorData));}return await response.json();}catch(error){console.error('Error RSVPing to event:',error);throw new Error(\"Network error: \".concat(error.message));}};export const deleteEvent=async eventId=>{const response=await fetch(\"\".concat(API_BASE_URL,\"/events/\").concat(eventId),{method:'DELETE'});return response.json();};","map":{"version":3,"names":["API_BASE_URL","createHeaders","token","localStorage","getItem","_objectSpread","concat","getEvents","response","fetch","headers","ok","errorData","text","Error","status","data","json","error","console","message","createEvent","event","title","method","body","JSON","stringify","rsvpToEvent","eventId","attendeeName","trim","encodeURIComponent","deleteEvent"],"sources":["C:/Users/roopa/Downloads/7c472156-04dc-4f9d-a70b-583e9ec537ed-89d5830e-67ff-4cea-a4e7-1923775caa72/reactapp/src/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:8081/api';\r\n\r\nconst createHeaders = () => {\r\n  const token = localStorage.getItem('token');\r\n  return {\r\n    'Content-Type': 'application/json',\r\n    ...(token && { 'Authorization': `Bearer ${token}` })\r\n  };\r\n};\r\n\r\nexport const getEvents = async () => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/events`, {\r\n      headers: createHeaders()\r\n    });\r\n    if (!response.ok) {\r\n      const errorData = await response.text();\r\n      throw new Error(`Failed to fetch events: ${response.status} ${errorData}`);\r\n    }\r\n    const data = await response.json();\r\n    return { data };\r\n  } catch (error) {\r\n    console.error('Error fetching events:', error);\r\n    throw new Error(`Network error: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const createEvent = async (event) => {\r\n  if (!event || !event.title) {\r\n    throw new Error('Invalid event data');\r\n  }\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/events`, {\r\n      method: 'POST',\r\n      headers: createHeaders(),\r\n      body: JSON.stringify(event),\r\n    });\r\n    if (!response.ok) {\r\n      const errorData = await response.text();\r\n      throw new Error(`Failed to create event: ${response.status} ${errorData}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error creating event:', error);\r\n    throw new Error(`Network error: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const rsvpToEvent = async (eventId, attendeeName) => {\r\n  if (!eventId || !attendeeName?.trim()) {\r\n    throw new Error('Invalid RSVP data');\r\n  }\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/events/${eventId}/rsvp?attendee=${encodeURIComponent(attendeeName.trim())}`, {\r\n      method: 'POST',\r\n      headers: createHeaders()\r\n    });\r\n    if (!response.ok) {\r\n      const errorData = await response.text();\r\n      throw new Error(`Failed to RSVP: ${response.status} ${errorData}`);\r\n    }\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Error RSVPing to event:', error);\r\n    throw new Error(`Network error: ${error.message}`);\r\n  }\r\n};\r\n\r\nexport const deleteEvent = async (eventId) => {\r\n  const response = await fetch(`${API_BASE_URL}/events/${eventId}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return response.json();\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}